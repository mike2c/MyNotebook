@using Core.Entities
@using Core.Models
@model PaginatedResult<Note>

@{
	ViewData["Title"] = "Index";

	int number = 1;
	string nextDisabled = !this.Model.HasNext() ? "disabled" : "";
	string prevDisabled = !this.Model.HasPrevious() ? "disabled" : "";
}

@if (Model.Data.Count() > 0)
{
	<div class="box">
		<div class="left">
			<div class="field horizontal">
				<label>Sort By</label>
				<div class="button-group">
					<button id="toggleSort">
						<span class="material-icons @(@ViewBag.Pagination.Direction.Equals("desc") ? "inverse-text" : "")">
							swap_vert
						</span>
					</button>
					<select id="orderBy" asp-items="@ViewBag.SortOptions"></select>

				</div>
			</div>
		</div>
		<div class="right">
			<a class="button" asp-action="create">Create <span class="material-icons">add</span></a>
		</div>
	</div>

	<div class="card-group">
		@foreach (var item in Model.Data)
		{
			<div class="card">
				<div class="card__layout">
					<div class="card__number">
						@number
					</div>
					<a class="card__summary" href="@Url.Action("edit", "notes", new { id = item.NoteId })">
						<h6 class="card__summary_title">
							@item.Title
						</h6>
						<p class="card__summary_footer">
							<span> @item.Topic.TopicName</span> @(item.CreatedDate.ToString("dd/MM/yyyy hh:mm  :ss"))
						</p>
					</a>
					<form class="card__button-delete" asp-action="delete" asp-controller="notes" method="post" onsubmit="return onDeleteNote(this)">
						<input type="hidden" id="id" name="id" value="@item.NoteId" />
						<button type="submit" href="@Url.Action("delete", "notes", new { id = item.NoteId })">
							<span class="material-icons">delete</span>
						</button>
					</form>
				</div>
				<div class="card__overlay">
					<div class="card__overlay__buttons">
						<a href="@Url.Action("delete", "notes", new { id = item.NoteId })">
							<span class="material-icons">pencil</span>
						</a>
						<a class="text-danger" href="@Url.Action("delete", "notes", new { id = item.NoteId })">
							<span class="material-icons">delete</span>
						</a>
					</div>
				</div>
			</div>
			number++;
		}
	</div>

	<div class="paging">
		<p class="paging-label"> @((Model.PageIndex - 1) * Model.ItemsPerPage + Model.Data.Count()) de @Model.TotalItems</p>
		<div class="paging__buttons">
			<a class="paging__buttons-prev @prevDisabled" href="?@ViewBag.Navigation.Previous">
				<span class="material-icons">
					arrow_back_ios
				</span>
			</a>
			<a class="paging__buttons-next @nextDisabled" href="?@ViewBag.Navigation.Next">
				<span class="material-icons">
					arrow_forward_ios
				</span>
			</a>
		</div>
	</div>
}
else
{
	if (!string.IsNullOrEmpty(@ViewBag.Pagination.Search))
	{
		<div class="not-result">
			<img src="~/img/no-result.svg" alt="Alternate Text" />
			<h2 class=" text-center">The search has returned no results</h2>
			<a class="button" asp-action="index" asp-controller="notes">Back</a>
		</div>
	}
	else
	{
		<div class="app-empty">
			<h1>There are no notes created yet, do you want to create one?</h1>
			<a class="button" asp-action="create" asp-controller="notes">Create <span class="material-icons">add</span></a>

		</div>

	}
}

@* Hidden fields that keep the page information *@
<input type="hidden" name="direction" id="direction" value="@ViewBag.Pagination.Direction" />
<input type="hidden" name="page" id="page" value="@ViewBag.Pagination.Page" />

